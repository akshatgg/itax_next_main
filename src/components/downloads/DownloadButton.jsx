'use client';

import 'jspdf-autotable';
import Button from '@/components/ui/Button';
import { jsPDF } from 'jspdf';

const DownloadButton = ({ id, fileName, results, title }) => {
  const getBase64FromUrl = async (url) => {
    const response = await fetch(url);
    const blob = await response.blob();
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onloadend = () => resolve(reader.result);
      reader.onerror = reject;
      reader.readAsDataURL(blob);
    });
  };
  
  const exportPdf = async () => {
    const doc = new jsPDF({ orientation: 'portrait' });

    const logoBase64 = await getBase64FromUrl('/logo.png');
    const logoWidth = 16; // mm
    const logoHeight = 8; // mm
    const pageWidth = doc.internal.pageSize.getWidth();
    doc.addImage(
      logoBase64,
      'PNG',
      (pageWidth - logoWidth) / 2,
      10,
      logoWidth,
      logoHeight
    );

    const watermarkText = 'iTax-Easy';
    doc.setFontSize(28);
    doc.setTextColor(186, 230, 253); // Light blue color for watermark
    if (doc.setGState) {
      // jsPDF >=2.5.0
      doc.setGState(new doc.GState({ opacity: 1.0}));
    }
    const pageHeight = doc.internal.pageSize.getHeight();
    for (let y = 40; y < pageHeight; y += 60) {
      // vertical spacing
      for (let x = 0; x < pageWidth; x += 80) {
        // horizontal spacing
        doc.text(watermarkText, x + 15, y, { angle: 30 });
      }
    }
    if (doc.setGState) {
      doc.setGState(new doc.GState({ opacity: 1 }));
    }
    doc.setTextColor(41, 128, 185); // Reset color for header
    doc.setFontSize(20); // Reset font size for header

    // Add title
    doc.setFontSize(16);
    doc.setTextColor(0, 0, 0);
    doc.text(
      title || 'Calculation Results',
      doc.internal.pageSize.width / 2,
      35,
      { align: 'center' },
    );

    // Add horizontal line
    doc.setDrawColor(220, 220, 220);
    doc.setLineWidth(0.5);
    doc.line(15, 40, doc.internal.pageSize.width - 15, 40);

    // Add date
    doc.setFontSize(10);
    doc.setTextColor(100, 100, 100); // Gray color
    doc.text(`Generated on: ${new Date().toLocaleDateString('en-IN')}`, 15, 50);

    // Add results table
    if (results && results.length > 0) {
      const tableData = results.map((item) => {
        // Format currency values if they contain ₹
        const value = item.value.includes('₹')
          ? item.value.replace('₹', '').trim() // Remove ₹ symbol and trim spaces
          : item.value;
        return [item.label, value];
      });

      doc.autoTable({
        startY: 60,
        head: [['Description', 'Value']],
        body: tableData,
        theme: 'grid',
        headStyles: {
          fillColor: [41, 128, 185],
          textColor: 255,
          fontSize: 12,
          fontStyle: 'bold',
          halign: 'left',
        },
        styles: {
          fontSize: 11,
          cellPadding: 5,
          lineColor: [200, 200, 200],
          lineWidth: 0.1,
        },
        columnStyles: {
          0: {
            cellWidth: 100,
            fontStyle: 'normal',
          },
          1: {
            cellWidth: 80,
            halign: 'right',
            fontStyle: (item) => {
              // Make Total Interest and Final Amount bold
              const label = tableData[item.row - 1]?.[0] || '';
              return label.includes('Total') || label.includes('Final')
                ? 'bold'
                : 'normal';
            },
          },
        },
        alternateRowStyles: {
          fillColor: [249, 249, 249],
        },
        margin: { left: 15, right: 15 },
      });
    } else {
      // If no results provided, try to get from HTML table
      doc.autoTable({
        html: id,
        startY: 60,
        margin: { left: 15, right: 15 },
      });
    }

    // Add footer
    const pageCount = doc.internal.getNumberOfPages();
    doc.setFontSize(8);
    doc.setTextColor(150, 150, 150);
    for (let i = 1; i <= pageCount; i++) {
      doc.setPage(i);
      doc.text(
        'Generated by iTax Easy Calculator',
        doc.internal.pageSize.width / 2,
        doc.internal.pageSize.height - 10,
        { align: 'center' },
      );
    }

    doc.save(fileName);
  };

  return (
    <Button onClick={exportPdf} size={'sm'}>
      Download PDF
    </Button>
  );
};

export default DownloadButton;
